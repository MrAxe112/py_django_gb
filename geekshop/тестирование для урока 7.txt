
Задание 1
=================================================================================================================
=================================================================================================================

Для оценки скорости работы сайта использую утилиту siege c настройками "-d0 -r20 -c125" -

							До кэширования:										После кеширования
							Количество запросов 	Количествов дублей	Время выполнения теста утилитов Siege	Количество запросов 	Количествов дублей	Время выполнения теста утилитов Siege
http://185.46.10.19/basket/					9			2			167,68; 				5			2			161.37;



Вывод: 
После добавления декоратора сократилось количество Дублей в sql-запросах, был замечен небольшой прирост скорости. 
Возможно при увеличении запросов пользователей будет заметен результат лучше. При сравнении самого долгого результата работы утилиты 
siege без декоратора (167,68 сек) и самого короткого результата (161,37 сек) c использованием декоратора был получен прирост 3,77 %. 


Задание 2
=================================================================================================================
=================================================================================================================

				Время SQL апроса	количество запросов 	Количество дублей
До добавления тега "with"	10.31 ms		7			3
После добавления тега "with"	8,07 ms			6			2

вывод: 
После применения тега "with" Удалось сократить количество повторяющихся SQL-запросов, что посволило сократить общее время в средмем на 10%. 
Самый лучший резултат приведен в таблице, где показано наилучшее зафиксированное время (21 % сокрашение время выполнения запроса).


Задание 3
=================================================================================================================
=================================================================================================================

Для оценки скорости работы сайта использую утилиту siege c настройками -d0 -r17 -c125


Среднее время выполнения до использования низкоуровневого кэширования 		377.77 
Среднее время выполнения после использования низкоуровневого кэширования	366.16


Вывод: 
Использование кэширования с помощью приложения "Memcached" позволило сократить количетсво повторных забросов к базе данных. 
Общее время выполнения операций сократилось на 3 %.


Задание 4
=================================================================================================================
=================================================================================================================

Для оценки скорости работы сайта использую утилиту siege c настройками -d0 -r17 -c125

			Обработка SQl-запросов	Количество запросов	Количество дубликатов	Время выполнения теста утилитов Siege
До кэширования - 	25.01 ms		46 			38 			600.20 ms (доступность 29,05%) 
После кэширования -	11.14 ms		10	 		2  			697,05 ms (доступность 100%)


Вывод: 
После кэширования фрагманта шаблона редактирования заказа была достигнута ощутимая прибавка стабильности страницы. 
Скорость обработки SQL запросов сократилась примерно в 2 раза. 
Теперь страница редактирования доступна для большего количеста пользователей одноврименно.
